{"version":3,"sources":["APIendpoint.ts","features/todo/todoSlice.tsx","features/user/userSlice.ts","features/modal/modalSlice.ts","features/filter/filterSlice.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["BASE_URL","fetchTodos","createAsyncThunk","url","axios","get","then","response","data","todoSlice","createSlice","name","initialState","loading","todos","error","selectedTodo","reducers","openTodo","state","action","find","todo","id","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","filteredTodosSelector","createSelector","filter","searchValue","optionValue","search","option","query","toLowerCase","trim","title","completed","includes","fetchUser","userId","userSlice","user","modalSlice","isModaloOpen","openModal","closeModal","filterSlice","searchFilter","optionFilter","store","configureStore","reducer","todoReducer","userReducer","modal","modalReducer","filterReducer","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","memo","dispatch","visibleTodos","handleOpen","useCallback","todoId","noTodosInFilter","useMemo","length","className","map","classNames","type","onClick","TodoFilter","filterState","handleFilterOption","e","target","value","handleSearchTerm","handleClear","onSubmit","event","preventDefault","onChange","placeholder","style","pointerEvents","Loader","TodoModal","handleClose","href","email","App","useEffect","Boolean","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.110b5fa3.chunk.js","sourcesContent":["// eslint-disable-next-line max-len\nexport const BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n","/* eslint-disable no-param-reassign */\nimport {\n  createSlice,\n  createAsyncThunk,\n  PayloadAction,\n  createSelector,\n} from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { Todo } from '../../types/Todo';\nimport { BASE_URL } from '../../APIendpoint';\nimport type { RootState } from '../../app/store';\n\ntype InitialState = {\n  loading: boolean;\n  todos: Todo[];\n  error: string;\n  selectedTodo: Todo | null;\n};\n\nexport const fetchTodos = createAsyncThunk('user/fetchTodos', () => {\n  const url = `${BASE_URL}/todos.json`;\n\n  return (\n    axios\n      .get(url)\n      .then(response => response.data)\n  );\n});\n\nconst initialState: InitialState = {\n  loading: false,\n  todos: [],\n  error: '',\n  selectedTodo: null,\n};\n\nconst todoSlice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    openTodo: (state, action: PayloadAction<number>) => {\n      state.selectedTodo = state.todos.find(todo => todo.id === action.payload)\n      || null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchTodos.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchTodos.fulfilled, (\n      state,\n      action: PayloadAction<Todo[]>,\n    ) => {\n      state.loading = false;\n      state.todos = action.payload;\n      state.error = '';\n    });\n    builder.addCase(fetchTodos.rejected, (state, action) => {\n      state.loading = false;\n      state.todos = [];\n      state.error = action.error.message || 'Something went wrong';\n    });\n  },\n});\n\nexport default todoSlice.reducer;\nexport const { openTodo } = todoSlice.actions;\n\nconst todosList = (state: RootState) => state.todo.todos;\nconst searchValue = (state: RootState) => state.filter.searchValue;\nconst optionValue = (state: RootState) => state.filter.optionValue;\n\nexport const filteredTodosSelector = createSelector(\n  [todosList, searchValue, optionValue],\n  (todos, search, option) => {\n    return todos.filter(todo => {\n      const query = search.toLowerCase().trim();\n      const title = todo.title.toLowerCase();\n\n      switch (option) {\n        case 'active':\n          return !todo.completed && title.includes(query);\n        case 'completed':\n          return todo.completed && title.includes(query);\n        default:\n          return title.includes(query);\n      }\n    });\n  },\n);\n","/* eslint-disable no-param-reassign */\nimport { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { User } from '../../types/User';\nimport { BASE_URL } from '../../APIendpoint';\n\ntype InitialState = {\n  loading: boolean;\n  user: User | null;\n  error: string;\n};\n\nexport const fetchUser = createAsyncThunk(\n  'user/fetchUser',\n  (userId:number) => {\n    const url = `${BASE_URL}/users/${userId}.json`;\n\n    return (\n      axios\n        .get(url)\n        .then(response => response.data)\n    );\n  },\n);\n\nconst initialState: InitialState = {\n  loading: false,\n  user: null,\n  error: '',\n};\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchUser.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchUser.fulfilled, (\n      state,\n      action: PayloadAction<User>,\n    ) => {\n      state.loading = false;\n      state.user = action.payload;\n      state.error = '';\n    });\n    builder.addCase(fetchUser.rejected, (state, action) => {\n      state.loading = false;\n      state.user = null;\n      state.error = action.error.message || 'Something went wrong';\n    });\n  },\n});\n\nexport default userSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\ntype InitialState = {\n  isModaloOpen: boolean;\n};\n\nconst initialState: InitialState = {\n  isModaloOpen: false,\n};\n\nconst modalSlice = createSlice({\n  name: 'modal',\n  initialState,\n  reducers: {\n    openModal: (state) => {\n      state.isModaloOpen = true;\n    },\n    closeModal: (state) => {\n      state.isModaloOpen = false;\n    },\n  },\n});\n\nexport default modalSlice.reducer;\nexport const { openModal, closeModal } = modalSlice.actions;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ntype InitialState = {\n  searchValue: string;\n  optionValue: string;\n};\n\nconst initialState: InitialState = {\n  searchValue: '',\n  optionValue: 'all',\n};\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState,\n  reducers: {\n    searchFilter: (state, action: PayloadAction<string>) => {\n      state.searchValue = action.payload;\n    },\n    optionFilter: (state, action: PayloadAction<string>) => {\n      state.optionValue = action.payload;\n    },\n  },\n});\n\nexport default filterSlice.reducer;\nexport const { searchFilter, optionFilter } = filterSlice.actions;\n","import { configureStore } from '@reduxjs/toolkit';\nimport todoReducer from '../features/todo/todoSlice';\nimport userReducer from '../features/user/userSlice';\nimport modalReducer from '../features/modal/modalSlice';\nimport filterReducer from '../features/filter/filterSlice';\n\nconst store = configureStore({\n  reducer: {\n    todo: todoReducer,\n    user: userReducer,\n    modal: modalReducer,\n    filter: filterReducer,\n  },\n});\n\nexport default store;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useCallback, memo, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { filteredTodosSelector, openTodo } from '../../features/todo/todoSlice';\nimport { fetchUser } from '../../features/user/userSlice';\nimport { openModal } from '../../features/modal/modalSlice';\n\nexport const TodoList: React.FC = memo(() => {\n  const dispatch = useAppDispatch();\n  const { selectedTodo } = useAppSelector(state => state.todo);\n  const visibleTodos = useAppSelector(filteredTodosSelector);\n  const { searchValue } = useAppSelector(state => state.filter);\n\n  const handleOpen = useCallback((todoId: number, userId: number) => {\n    dispatch(openTodo(todoId));\n    dispatch(fetchUser(userId));\n    dispatch(openModal());\n  }, [dispatch]);\n\n  const noTodosInFilter = useMemo(() => (\n    searchValue && !visibleTodos.length\n  ), [searchValue, visibleTodos]);\n\n  return (\n    <>\n      {noTodosInFilter && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      <table className=\"table is-narrow is-fullwidth\">\n        {!noTodosInFilter && (\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n        )}\n\n        <tbody>\n          {visibleTodos.map(todo => (\n            <tr\n              data-cy=\"todo\"\n              key={todo.id}\n              className={classNames({\n                'has-background-info-light': selectedTodo === todo,\n              })}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-danger': !todo.completed,\n                    'has-text-success': todo.completed,\n                  })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleOpen(todo.id, todo.userId)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far',\n                      {\n                        'fa-eye': selectedTodo !== todo,\n                        'fa-eye-slash': selectedTodo === todo,\n                      },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n});\n","import React, { useCallback, memo } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { searchFilter, optionFilter } from '../../features/filter/filterSlice';\n\nexport const TodoFilter: React.FC = memo(() => {\n  const dispatch = useAppDispatch();\n  const filterState = useAppSelector(state => state.filter);\n\n  const handleFilterOption = useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>) => {\n      dispatch(optionFilter(e.target.value));\n    },\n    [dispatch],\n  );\n\n  const handleSearchTerm = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      dispatch(searchFilter(e.target.value));\n    },\n    [dispatch],\n  );\n\n  const handleClear = useCallback(() => {\n    dispatch(searchFilter(''));\n  }, [dispatch]);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterState.optionValue}\n            onChange={handleFilterOption}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filterState.searchValue}\n          onChange={handleSearchTerm}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={handleClear}\n          />\n        </span>\n      </p>\n    </form>\n  );\n});\n","import React, { memo } from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import React, { memo, useCallback } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\nimport { openTodo } from '../../features/todo/todoSlice';\nimport { fetchUser } from '../../features/user/userSlice';\nimport { closeModal } from '../../features/modal/modalSlice';\n\nexport const TodoModal: React.FC = memo(() => {\n  const dispatch = useAppDispatch();\n  const { user, loading } = useAppSelector(state => state.user);\n  const { selectedTodo } = useAppSelector(state => state.todo);\n\n  const handleClose = useCallback(() => {\n    dispatch(openTodo(0));\n    dispatch(fetchUser(0));\n    dispatch(closeModal());\n  }, [dispatch]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading && <Loader />}\n\n      {(!loading && user) && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","/* eslint-disable max-len */\nimport React, { useEffect, memo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { useAppSelector, useAppDispatch } from './app/hooks';\nimport { fetchTodos } from './features/todo/todoSlice';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = memo(() => {\n  const dispatch = useAppDispatch();\n  const { todos, loading } = useAppSelector(state => state.todo);\n  const { isModaloOpen } = useAppSelector(state => state.modal);\n\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              {Boolean(todos.length) && <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModaloOpen && <TodoModal />}\n    </>\n  );\n});\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport store from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}